{"version":3,"sources":["style/GlobalStyle.jsx","style/MediaQuery.jsx","components/atoms/title/LargeTitle.jsx","components/atoms/list/VerticalList.jsx","components/atoms/text/Paragraph.jsx","components/organisms/hero/Hero.jsx","components/atoms/title/MediumTitle.jsx","components/atoms/list/HorizontalList.jsx","components/atoms/title/SmallTitle.jsx","components/molecules/card/ListCard.jsx","components/organisms/article/ListArticle.jsx","components/atoms/text/Supplement.jsx","components/molecules/card/DescriptionCard.jsx","components/organisms/article/DescriptionArticle.jsx","components/templates/Resume.jsx","components/App.jsx","index.js"],"names":["styledVariables","GlobalStyle","createGlobalStyle","reset","breakpoints","sm","md","lg","xlg","mq","width","style","H1","styled","h1","LargeTitle","props","children","VerticalList","arr","Fragment","map","val","id","P","p","Paragraph","Grid","div","Hero","data","name","contact","H2","h2","MediumTitle","Flex","HorizontalList","element","H3","h3","SmallTitle","Card","ListCard","smallTitle","description","ListArticle","title","contents","content","Supplement","DescriptionCard","supplement","DescriptionArticle","Paper","Resume","basic","post","article","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.401e3a5b.chunk.js","sourcesContent":["import { createGlobalStyle }  from 'styled-components';\nimport { reset } from 'styled-reset'\n\nconst styledVariables = {\n        \"primary-color\":\"#FFFFFF\",\n        \"secondary-color\":\"#131516\",\n        \"secondary-color-l\":\"#373D3F\",\n        \"secondary-color-l-ex\":\"#707480\",\n};\n\nconst GlobalStyle = createGlobalStyle`\n        ${reset}\n\n        * { \n                /* outline: 2px solid rgba(218, 65, 65, 0.426);\n                outline-offset: -1px; */\n                box-sizing: border-box;\n        }\n        html{\n                background-color:${styledVariables[\"primary-color\"]};\n                background-color:whitesmoke;\n                font-size:16px;\n\n        }\n        body {\n                font-size: 1em;\n                font-weight: 400;\n                text-align: left;\n                font-family: 'Playfair Display', serif;\n                color: ${styledVariables[\"secondary-color-l\"]};\n        }\n`;\n\n\nexport {GlobalStyle, styledVariables};","\nconst breakpoints = {\n        sm: 575.98,\n        md: 767.98,\n        lg: 991.98,\n        xlg:1199.98\n}\n\nexport const mq = (width) => {\n    return(\n        style => `@media (max-width: ${breakpoints[width]}px) { ${style} }`\n    );\n}\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport {styledVariables} from '../../../style/GlobalStyle';\nimport { mq } from '../../../style/MediaQuery';\n\nconst H1 = styled.h1`\n        font-family: Oswald, sans-serif;\n        margin-top:-1rem;\n        font-size: 4rem;\n        font-weight: 700;\n        line-height: 124.8%;\n        letter-spacing: 2.5%;\n        color: ${styledVariables[\"secondary-color\"]};\n        ${mq(\"md\")`\n            font-size: 3rem;\n            margin-bottom: 2rem;\n        `};\n        \n`;\n\nfunction LargeTitle(props){\n    return(\n        <H1>{props.children}</H1>\n    );\n}\n\nexport default LargeTitle;","// Display each item of the array in vertical way.\n// Each and the whole elements are not wrapped.\n// You can wrap as any tag\n// ex,\n// <p>\n//     <VerticalList>\n//         {ArrData}\n//     </VerticalList>\n// </p> \n\n\nimport React from \"react\";\n\n\nfunction VerticalList(props){\n    const arr = props.children;\n    return(\n        <React.Fragment>\n            {/* to avoid undefined map */}\n            {arr && arr.map((val,id)=>{\n                return(\n                    <React.Fragment key={id}>\n                        {val}\n                        <br/>\n                    </React.Fragment>\n                )\n            })}\n        </React.Fragment>\n        \n    \n    );\n}\n\n\nexport default VerticalList;","import React from \"react\";\nimport styled from 'styled-components';\nimport {styledVariables} from '../../../style/GlobalStyle';\n\nconst P = styled.p`\n    font-size: 1em;\n    font-weight: 400;\n    text-align: left;\n    font-family: 'Playfair Display', serif;\n    line-height: 168%;\n    color: ${styledVariables[\"secondary-color-l\"]};\n    \n`;\n\nfunction Paragraph(props){\n    return(\n        <P>{props.children}</P>\n    );\n}\n\nexport default Paragraph;","import React from 'react';\nimport styled from 'styled-components';\nimport LargeTitle from '../../atoms/title/LargeTitle';\nimport VerticalList from '../../atoms/list/VerticalList';\nimport Paragraph from '../../atoms/text/Paragraph';\nimport { mq } from '../../../style/MediaQuery';\n\nconst Grid = styled.div`\n    margin-bottom: 3rem;\n    display: grid;\n    grid-auto-flow: column;\n    grid-template-columns: repeat(2, auto);\n    justify-content: space-between;\n    column-gap: 1rem;\n    ${mq(\"md\")`\n        display: block;\n    `};\n\n/* \n    ${mq(\"xlg\")`\n        background-color: #cffe42;\n    `};\n    ${mq(\"lg\")`\n        background-color: #3b83c2;\n    `};\n    ${mq(\"md\")`\n        background-color: #7a14c2;\n    `};\n    ${mq(\"sm\")`\n        background-color: #3e0126;\n    `}; */\n\n\n`;\n\nfunction Hero(props){\n    const data = props.children\n    return(\n        <Grid>\n            <LargeTitle>\n                <VerticalList>\n                    {data.name}\n                </VerticalList>\n            </LargeTitle>\n            <Paragraph>\n                <VerticalList>\n                    {data.contact}\n                </VerticalList>\n            </Paragraph>\n        </Grid>\n    );\n}\n\nexport default Hero;","import React from 'react';\nimport styled from 'styled-components';\nimport {styledVariables} from '../../../style/GlobalStyle';\n\nconst H2 = styled.h2`\n        margin-top:-0.5rem;\n        margin-bottom: 1.5rem;\n        font-size: 2rem;\n        font-weight: 700;\n        font-family: Oswald, sans-serif;\n        line-height:128%;\n        color: ${styledVariables[\"secondary-color\"]};\n`;\n\nfunction MediumTitle(props){\n    return(\n        <H2>{props.children}</H2>\n    );\n}\n\nexport default MediumTitle;","// Display each item of the array in horizontal way.\n// Elements are wrapped if width is small. \n// Each elements is defined as \"div\" to set margin.\n// Thus, you can not wrap any inline elements\n// ex, this is bad usage!!!\n// <p>\n//     <HorizontalList>\n//         {ArrData}\n//     </HorizontalList>\n// </p>\n\nimport React from \"react\";\nimport styled from 'styled-components';\n\nconst Flex = styled.div`\n    display:flex;\n    flex-wrap: wrap;\n    gap: 1rem;\n    & > div{\n        margin-right: 1rem;\n    }\n`;\n\nfunction HorizontalList(props){\n    const arr = props.children;\n    return(\n        <Flex>\n            {arr&&arr.map((element, id)=>{\n                return(\n                    <div key={id}>\n                        {element}\n                    </div>\n                );\n            })}\n        </Flex>\n    );\n}\n\nexport default HorizontalList;","import React from 'react';\nimport styled from 'styled-components';\nimport {styledVariables} from '../../../style/GlobalStyle';\nimport { mq } from '../../../style/MediaQuery';\n\nconst H3 = styled.h3`\n        margin-bottom: 0.75rem;\n        font-size: 1.125rem;\n        font-weight: 700;\n        font-family: Oswald, sans-serif;\n        color: ${styledVariables[\"secondary-color\"]};\n        ${mq(\"md\")`\n            line-height:140%;\n        `};  \n`;\n\nfunction SmallTitle(props){\n    return(\n        <H3>{props.children}</H3>\n    );\n}\n\nexport default SmallTitle;","import React from 'react';\nimport styled from 'styled-components';\nimport HorizontalList from '../../atoms/list/HorizontalList';\nimport SmallTitle from '../../atoms/title/SmallTitle';\n\nconst Card = styled.div`\n    margin-bottom: 1.5rem;\n    &:last-child{\n        margin-bottom: 0;\n    }\n`;\n\nfunction ListCard(props){\n    const data = props.children;\n    return(\n        <Card>\n            <SmallTitle>\n                {data.smallTitle}\n            </SmallTitle>\n            <HorizontalList>\n                {data.description}\n            </HorizontalList>\n        </Card>\n    );\n}\n\nexport default ListCard;","import React from 'react';\nimport styled from 'styled-components';\nimport { mq } from '../../../style/MediaQuery';\nimport MediumTitle from '../../atoms/title/MediumTitle';\nimport ListCard from '../../molecules/card/ListCard';\n\nconst Grid = styled.div`\n    margin-bottom:3rem;\n    display:grid;\n    grid-auto-flow:column;\n    grid-template-columns: 2fr 7fr;\n    column-gap: 7rem;\n    ${mq(\"lg\")`\n        display: block;\n        margin-bottom:4rem;\n    `};\n`;\n\nfunction ListArticle(props){\n    const data = props.children;\n    return(\n        <Grid>\n            <MediumTitle>\n                {data.title}\n            </MediumTitle>\n            <div>\n                {data.contents.map((content, id)=>{\n                    return(\n                        <ListCard key={id}>\n                            {content}\n                        </ListCard>\n                    )\n                })}\n            </div>\n        </Grid>\n    );\n}\n\nexport default ListArticle;","import React from \"react\";\nimport styled from 'styled-components';\nimport {styledVariables} from '../../../style/GlobalStyle';\n\nconst P = styled.p`\n    margin-bottom: 0.5rem;  \n    font-size: 0.875rem;\n    font-style: italic;\n    color: ${styledVariables[\"secondary-color-l-ex\"]};\n    \n`;\n\nfunction Supplement(props){\n    return(\n        <P>{props.children}</P>\n    );\n}\n\nexport default Supplement;","import React from 'react';\nimport styled from 'styled-components';\nimport Paragraph from '../../atoms/text/Paragraph';\nimport Supplement from '../../atoms/text/Supplement';\nimport SmallTitle from '../../atoms/title/SmallTitle';\n\nconst Card = styled.div`\n    margin-bottom: 1.5rem;\n    &:last-child{\n        margin-bottom: 0;\n    }\n`;\n\nfunction DescriptionCard(props){\n    const data = props.children;\n    return(\n        <Card>\n            <SmallTitle>\n                {data.smallTitle}\n            </SmallTitle>\n            <Supplement>\n                {data.supplement}\n            </Supplement>\n            <Paragraph>\n                {data.description}\n            </Paragraph>\n        </Card>\n    );\n}\n\nexport default DescriptionCard;","import React from 'react';\nimport styled from 'styled-components';\nimport { mq } from '../../../style/MediaQuery';\nimport MediumTitle from '../../atoms/title/MediumTitle';\nimport DescriptionCard from '../../molecules/card/DescriptionCard';\n\n\n\nconst Grid = styled.div`\n    margin-bottom:3rem;\n    display:grid;\n    grid-auto-flow:column;\n    grid-template-columns: 2fr 7fr;\n    column-gap: 7rem;\n    ${mq(\"lg\")`\n        display: block;\n        margin-bottom:4rem;\n    `};\n`;\n\nfunction DescriptionArticle(props){\n    const data = props.children;\n    return(\n        <Grid>\n            <MediumTitle>\n                {data.title}\n            </MediumTitle>\n            <div>\n                {data.contents.map((content, id)=>{\n                    return(\n                        <DescriptionCard key={id}>\n                            {content}\n                        </DescriptionCard>\n                    )\n                })}\n            </div>\n        </Grid>\n    );\n}\n\nexport default DescriptionArticle;","import React from 'react';\nimport styled from 'styled-components';\nimport Hero from '../organisms/hero/Hero';\nimport ListArticle from '../organisms/article/ListArticle';\nimport DescriptionArticle from '../organisms/article/DescriptionArticle';\nimport { mq } from '../../style/MediaQuery';\n\n\nconst Paper = styled.div`\n    max-width: 1080px;\n    min-width: 440px;\n    max-height: calc(1080px*1.2941);\n    margin: 4rem max(2rem, calc((100vw - 1080px)/2));\n    padding: 5rem 7rem;\n    background-color:#f1f5f7;\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 8px;\n    background-image: url(\"https://www.transparenttextures.com/patterns/lined-paper-2.png\");\n    position: relative; \n    ${mq(\"lg\")`\n        max-height: none;\n    `};   \n    ${mq(\"md\")`\n        padding: 4rem 2rem;\n    `};   \n`;\n\nfunction Resume(props){\n    const data = props.children;\n    return(\n        <Paper>\n            <Hero>\n                {data.basic}\n            </Hero>\n            {data.post.map((article,id)=>{\n                return(\n                    (article.title === \"Skills\") ?\n                            <ListArticle key={id}>\n                                {article}\n                            </ListArticle>\n                        :\n                            <DescriptionArticle key={id}>\n                                {article}\n                            </DescriptionArticle>\n                );\n            })}\n        </Paper>\n    );\n}\n\nexport default Resume;","import React from \"react\";\nimport {GlobalStyle} from \"../style/GlobalStyle\";\nimport data from \"../data.json\";\nimport Resume from \"./templates/Resume\";\n\nfunction App(){\n    return(\n        <React.Fragment>\n            <GlobalStyle/>\n            <Resume>\n                {data}\n            </Resume>\n        </React.Fragment>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}